---
# @meta description: >
# Requires [Vault](../../vault/) to be run
# Requires Cockroach installed on local machine
#
# - Create Cockroach SSL certificates and save to Vault
# - Install and configure [consul-template](https://github.com/hashicorp/consul-template) to update ssl configuration when certificates change
# @end

- ansible.builtin.import_tasks: ../../common-tasks/consul-template/consul-template.yaml

- ansible.builtin.import_tasks: ../../common-tasks/vault_login/vault_login.yaml

- run_once: true
  delegate_to: localhost
  become: false
  environment:
    VAULT_ADDR: "{{ vault_addr }}"
    VAULT_TOKEN: "{{ vault_token }}"
  block:
    - name: Ensure working directory
      ansible.builtin.file:
        path: /tmp/cockroach/tls
        state: directory

    - name: Ensure cockroach pki secret engine enabled on vault
      ansible.builtin.command: |
        vault secrets enable --path=pki/cockroach pki
      register: enable_pki_out
      failed_when: enable_pki_out.rc != 0 and 'already in use' not in enable_pki_out.stderr

    - name: Increase maximum TTL for issueing certificates
      ansible.builtin.command: |
        vault secrets tune -max-lease-ttl=8760h pki/cockroach

    - name: Configure CA and CRL urls
      ansible.builtin.command: |
        vault write pki/cockroach/config/urls \
          issuing_certificates="https://{{ vault.ui_host }}/v1/pki/cockroach/ca" \
          crl_distribution_points="https://{{ vault.ui_host }}/v1/pki/cockroach/crl"

    - name: Check if issuer for root CA exists
      ansible.builtin.command: |
        vault list -format=json pki/cockroach/issuers
      register: check_issuer_out
      failed_when: check_issuer_out.rc != 0 and check_issuer_out.rc != 2

    - when: check_issuer_out.rc == 0
      set_fact:
        issuer_exist: "{{ (check_issuer_out.stdout | from_json | json_query('[]') | length) >= 1 }}"
    - when: check_issuer_out.rc == 2
      set_fact:
        issuer_exist: false

    - name: Generate root CA
      ansible.builtin.command: |
        vault write -field=certificate \
          pki/cockroach/root/generate/internal \
          ttl=8760h
      when: not issuer_exist

    - name: Configure auto tidy
      ansible.builtin.command: |
        vault write pki/cockroach/config/auto-tidy \
          enabled=true \
          interval_duration=6h \
          tidy_cert_store=true \
          tidy_revoked_certs=true \
          tidy_revoked_cert_issuer_associations=true \
          tidy_expired_issuers=true \
          tidy_move_legacy_ca_bundle=true \
          tidy_revocation_queue=true \
          issuer_safety_buffer=30d \
          safety_buffer=24h

    - name: Create node pki role
      ansible.builtin.command: |
        vault write pki/cockroach/roles/cockroachdb_nodes \
          allow_wildcard_certificates=true \
          allow_ip_sans=true \
          allow_localhost=true \
          client_flag=true \
          server_flag=true \
          require_cn=true \
          cn_validations="disabled" \
          enforce_hostnames=false \
          ttl=48h \
          max_ttl=8760h

    - name: Create client pki role
      ansible.builtin.command: |
        vault write pki/cockroach/roles/cockroachdb_client \
          allow_wildcard_certificates=false \
          allow_ip_sans=false \
          allow_localhost=false \
          client_flag=true \
          server_flag=false \
          require_cn=true \
          cn_validations="disabled" \
          enforce_hostnames=false \
          ttl=48h \
          max_ttl=8760h

    - name: Copy vault policy to working directory
      ansible.builtin.copy:
        src: renew-cockroach-node-certs.policy.hcl
        dest: /tmp/cockroach/tls/renew-cockroach-node-certs.policy.hcl

    - name: Create policy
      ansible.builtin.command: vault policy write renew-cockroach-node-certs \
        /tmp/cockroach/tls/renew-cockroach-node-certs.policy.hcl

    - name: Get vault token
      ansible.builtin.command: vault token create -field=token \
        -policy=renew-cockroach-node-certs \
        -period=24h
      register: vault_token_out

- name: Copy Vault token to token directory
  ansible.builtin.copy:
    content: "{{ vault_token_out.stdout }}"
    dest: "{{ consul_template.token_dir }}/vault/.cockroach_cluster"
    owner: root
    group: root
    mode: "440"
  notify: consul-template unit Restarted

- name: Ensure user cockroach
  ansible.builtin.user:
    name: cockroach
    system: true
    state: present

- name: Ensure cockroach certs directory
  ansible.builtin.file:
    path: "{{ cockroach.certs_dir }}"
    state: directory
    owner: cockroach
    group: cockroach
    mode: "775"

- name: Copy cluster CA template
  ansible.builtin.template:
    src: ca.crt.tpl.j2
    dest: "{{ consul_template.data_dir }}/ca.crt.tpl"
    owner: root
    group: root
    mode: "440"
  notify: consul-template unit Restarted

- name: Copy node certificate template
  ansible.builtin.template:
    src: node.crt.tpl.j2
    dest: "{{ consul_template.data_dir }}/node.crt.tpl"
    owner: root
    group: root
    mode: "440"
  notify: consul-template unit Restarted

- name: Copy node certificate key template
  ansible.builtin.template:
    src: node.key.tpl.j2
    dest: "{{ consul_template.data_dir }}/node.key.tpl"
    owner: root
    group: root
    mode: "440"
  notify: consul-template unit Restarted

- name: Copy client root certificate template
  ansible.builtin.template:
    src: client.root.crt.tpl.j2
    dest: "{{ consul_template.data_dir }}/client.root.crt.tpl"
    owner: root
    group: root
    mode: "440"
  notify: consul-template unit Restarted

- name: Copy client root certificate key template
  ansible.builtin.template:
    src: client.root.key.tpl.j2
    dest: "{{ consul_template.data_dir }}/client.root.key.tpl"
    owner: root
    group: root
    mode: "440"
  notify: consul-template unit Restarted

- name: Copy cockroach nodes tls consul-template config file
  ansible.builtin.template:
    src: cockroach_cluster_ctmpl.hcl.j2
    dest: "{{ consul_template.config_dir }}/cockroach_cluster_ctmpl.hcl"
    owner: root
    group: root
    mode: "440"
  notify: consul-template unit Restarted
