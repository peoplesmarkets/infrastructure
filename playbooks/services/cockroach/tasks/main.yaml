---
# @meta description: >
# Requires all core infrastructure components to be deployed and configured
#
# - Create Cockroach user and databases for services
# @end

- ansible.builtin.import_tasks: ../../common-tasks/vault_login/vault_login.yaml

- run_once: true
  delegate_to: localhost
  become: false
  environment:
    VAULT_ADDR: "{{ vault_addr }}"
    VAULT_TOKEN: "{{ vault_token }}"
  block:
    - name: Ensure working directory
      ansible.builtin.file:
        path: /tmp/services/cockroach
        state: directory

    - ansible.builtin.set_fact:
        allowed_roles: "{{ services.backend | map(attribute='database_user') | join(',') }}"

    - name: Configure cockroach database secret engine with allowed roles
      ansible.builtin.command: >-
        vault write database/config/cockroach
          allowed_roles={{ allowed_roles }}

    - name: Get cockroach management password
      ansible.builtin.command: >-
        vault read -field=password 
          kv/cockroach/clients/global_management
      register: management_password_out

    - name: Create services databases and users
      run_once: true
      delegate_to: "{{ groups.cockroach[0] }}"
      become: true
      ansible.builtin.command: >-
        cockroach sql --url postgresql://global_management:{{ management_password_out.stdout }}@{{ localhost_ip }}:{{ cockroach.ports.sql }}/defaultdb?sslmode=prefer \
          --execute 'CREATE DATABASE IF NOT EXISTS {{ item.database }};'
          --execute 'CREATE USER IF NOT EXISTS {{ item.database_user }};'
          {% if 'database_roles' in item %}{% for role in item.database_roles %}
          --execute 'ALTER USER {{ item.database_user }} WITH {{ role }};'
          {% endfor %}{% endif %}
          --execute 'GRANT ALL ON DATABASE {{ item.database }} TO {{ item.database_user }} WITH GRANT OPTION;'
      with_items: "{{ services.backend }}"

    - name: Copy rotation statement to working directory
      ansible.builtin.copy:
        src: rotation.sql
        dest: /tmp/services/cockroach/rotation.sql

    - name: Create static credentials role on vault
      ansible.builtin.command: >-
        vault write database/static-roles/{{ item.database_user }}
          db_name=cockroach
          rotation_statement=@/tmp/services/cockroach/rotation.sql
          username="{{ item.database_user }}"
          rotation_period=86400
      with_items: "{{ services.backend }}"
