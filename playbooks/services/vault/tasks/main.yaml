---
# @meta description: >
# Requires all core infrastructure components to be deployed and configured
#
# - Create Vault role and user for Nomad deployments and set password in GitHub
# - Create Vault user for each service
# @end

- ansible.builtin.import_tasks: ../../common-tasks/vault_login/vault_login.yaml

- run_once: true
  delegate_to: localhost
  become: false
  environment:
    VAULT_ADDR: "{{ vault_addr }}"
    VAULT_TOKEN: "{{ vault_token }}"
  block:
    - name: Ensure working directory exists
      ansible.builtin.file:
        path: /tmp/services/vault/
        state: directory

    - name: Copy services deployer policy to working directory
      ansible.builtin.copy:
        src: services-deployer.policy.hcl
        dest: /tmp/services/vault/

    - name: Create services deployer policy on vault
      ansible.builtin.command: >-
        vault policy write services-deployer
          /tmp/services/vault/services-deployer.policy.hcl

    - ansible.builtin.set_fact:
        services_deployer_password: "{{ 999999999999999 | random | to_uuid }}"

    - name: Create services deployer user or update
      ansible.builtin.command: >-
        vault write auth/userpass/users/services-deployer
          password={{ services_deployer_password }}
          policies=services-deployer

    - ansible.builtin.pause:
        prompt: Save {{ services_deployer_password }} to GitHub organization secrets as '{{ services.github_service_deployer_password_key }}'

    - name: Copy service roles to working directory
      ansible.builtin.template:
        src: service.policy.hcl.j2
        dest: /tmp/services/vault/service-{{ item.name }}.hcl
      with_items: "{{ services.services }}"

    - name: Create service roles on vault
      ansible.builtin.command: >-
        vault policy write service-{{ item.name }}
          /tmp/services/vault/service-{{ item.name }}.hcl
      with_items: "{{ services.services }}"
