---
# @meta description: >
# Requires [provisioning](../../../provisioning/) to be run or KMS keyring to be set up on GCP.
#
# Configure Vault
# - Get self signed SSL Certificate from [HCPVS](https://developer.hashicorp.com/hcp/docs/vault-secrets)
# - Configure Vault with raft storage and auto unseal using [GCP KMS](https://cloud.google.com/security-key-management)
# @end

- name: Get certificates
  run_once: true
  delegate_to: localhost
  become: false
  block:
    - name: Get root CA certificate from HCPVS # HCP Vault Secrets
      ansible.builtin.command: |
        vlt secrets get \
          -p {{ hcpvs.project_id }} \
          -a vault \
          -plaintext ssl_ca_certificate
      register: ssl_ca_certificate_out

    - name: Get vault certificate key from HCPVS
      ansible.builtin.command: |
        vlt secrets get \
          -p {{ hcpvs.project_id }} \
          -a vault \
          -plaintext ssl_certificate_key
      register: ssl_certificate_key_out

    - name: Get vault certificate from HCPVS
      ansible.builtin.command: |
        vlt secrets get \
          -p {{ hcpvs.project_id }} \
          -a vault \
          -plaintext ssl_certificate
      register: ssl_certificate_out

    - name: Get GCP credentials from HCPVS
      ansible.builtin.command: |
        vlt secrets get \
          -p {{ hcpvs.project_id }} \
          -a vault \
          -plaintext gcp_kms_service_account_key
      register: gcp_kms_service_account_key_out

- name: Ensure vault config dir
  ansible.builtin.file:
    path: "{{ vault.config_dir }}"
    state: directory
  notify: Vault Restarted

- name: Ensure certificate directory
  ansible.builtin.file:
    path: "{{ vault.certs_dir }}"
    state: absent
  notify: Vault Restarted

- name: Ensure certificate directory
  ansible.builtin.file:
    path: "{{ vault.certs_dir }}"
    state: directory
    mode: 0775
  notify: Vault Restarted

- name: Copy CA certificate
  ansible.builtin.copy:
    content: "{{ ssl_ca_certificate_out.stdout }}"
    dest: "{{ vault.certs_dir }}/ca.crt"
    owner: root
    group: root
    mode: 0644
  notify: Vault Restarted

- name: Copy vault certificate
  ansible.builtin.copy:
    content: "{{ ssl_certificate_key_out.stdout }}"
    dest: "{{ vault.certs_dir }}/client.key"
    owner: root
    group: root
    mode: 0644
  notify: Vault Restarted

- name: Copy vault certificate key
  ansible.builtin.copy:
    content: "{{ ssl_certificate_out.stdout }}"
    dest: "{{ vault.certs_dir }}/client.crt"
    owner: root
    group: vault
    mode: 0640
  notify: Vault Restarted

- name: Copy GCP service account credentials
  ansible.builtin.copy:
    content: "{{ gcp_kms_service_account_key_out.stdout }}"
    dest: "{{ vault.config_dir }}/gcp_credentials.json"
    owner: root
    group: vault
    mode: 0640
  notify: Vault Restarted

- name: Copy vault config file
  ansible.builtin.template:
    src: vault.hcl.j2
    dest: "{{ vault.config_dir }}/vault.hcl"
    owner: vault
    group: vault
    mode: 0664
  notify: Vault Restarted

# sudo vault operator init --address https://<private-ip-address>:8200 -ca-cert /opt/vault/tls/ca.crt -client-cert /opt/vault/tls/client.crt -client-key /opt/vault/tls/client.key
# sudo vault operator init --address https://10.0.0.9:8200 -ca-cert /opt/vault/tls/ca.crt -client-cert /opt/vault/tls/client.crt -client-key /opt/vault/tls/client.key
# sudo vault operator init --address https://10.0.4.4:8200 -ca-cert /opt/vault/tls/ca.crt -client-cert /opt/vault/tls/client.crt -client-key /opt/vault/tls/client.key

# save token as "initial_root_token"

- name: Manually initialize vault if not initialized yet
  ansible.builtin.pause:
    prompt: Login to one vault server and run the init comman. Save restore keys to HCPVS.
