---
# @meta description: >
# Requires [Vault](../../vault/) to be run
#
# Requires [Nomad](../../nomad/) to be run
#
# Requires [Cockroach](../../cockroach) to be run and zitadel users to be configured in Vault
#
# Requires SMTP credentials and 32 bit master_key to be saved to Vault
#
# - Deploy init job to nomad
# - Deploy setup job to nomad
# - Deploy start job to nomad
# @end
# @todo automation: Create consul intention for  zitadel-init -> cockroach-sql zitadel-setup -> cockroach-sql, zitadel-gateway -> zitadel and zitadel -> cockroach-sql 

- name: Ensure zitadel master key on Vault
  ansible.builtin.pause:
    prompt: Save 32 bit master key to 'kv/zitadel/master_key' 'key=****', 'kv/zitadel/smtp' 'username=***' 'password=***' and 'kv/zitadel/users/admin' 'username=***' 'password=***'

- ansible.builtin.import_tasks: ../../common-tasks/vault_login/vault_login.yaml

- ansible.builtin.import_tasks: ../../common-tasks/nomad_login/nomad_login.yaml

- name: Ensure working directory
  ansible.builtin.file:
    path: /tmp/zitade/install
    state: directory

- name: Copy zitade vault role to working directory
  ansible.builtin.copy:
    src: zitadel.policy.hcl
    dest: /tmp/zitade/install/zitadel.policy.hcl

- name: Ensure zitadel policy on vault
  environment:
    VAULT_ADDR: "{{ vault_addr }}"
    VAULT_TOKEN: "{{ vault_token }}"
  ansible.builtin.command: |
    vault policy write zitadel \
      /tmp/zitade/install/zitadel.policy.hcl

- name: Prepare init job file
  ansible.builtin.template:
    src: zitadel.init.nomad.j2
    dest: /tmp/zitade/install/zitadel.init.nomad

- name: Deploy init job
  ansible.builtin.command: |
    nomad job run \
      -address={{ nomad.url }} \
      -token={{ nomad_token }} \
      /tmp/zitade/install/zitadel.init.nomad

- name: Wait for init job finished
  ansible.builtin.shell: |
    nomad job status \
      -address={{ nomad.url }} \
      -token={{ nomad_token }} \
      -short zitadel-init | 
      grep Status | 
      awk '{print $3}'
  register: init_job_status_out
  until: init_job_status_out.stdout == 'dead'
  delay: 10
  retries: 10

- name: Prepare setup job file
  ansible.builtin.template:
    src: zitadel.setup.nomad.j2
    dest: /tmp/zitade/install/zitadel.setup.nomad

- name: Deploy setup job
  ansible.builtin.command: |
    nomad job run \
      -address={{ nomad.url }} \
      -token={{ nomad_token }} \
      /tmp/zitade/install/zitadel.setup.nomad

- name: Wait for setup job finished
  ansible.builtin.shell: |
    nomad job status \
      -address={{ nomad.url }} \
      -token={{ nomad_token }} \
      -short zitadel-setup | 
      grep Status | 
      awk '{print $3}'
  register: setup_job_status_out
  until: setup_job_status_out.stdout == 'dead'
  delay: 10
  retries: 20

- name: Prepare start job file
  ansible.builtin.template:
    src: zitadel.nomad.j2
    dest: /tmp/zitade/install/zitadel.nomad

- name: Deploy start job
  ansible.builtin.command: |
    nomad job run \
      -address={{ nomad.url }} \
      -token={{ nomad_token }} \
      /tmp/zitade/install/zitadel.nomad

# Users -> Service Users -> New
# User Name = service
# Name = service
# Access Token Type = JWT

# Actions -> Generate Client Secret

# Organisation -> + -> "Org Owner"

# => save to vault under 'kv/zitadel/users/service' client_secret=****
