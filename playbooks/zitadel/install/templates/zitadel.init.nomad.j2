job "zitadel-init" {
  datacenters = ["{{ data_center }}"]
  type = "batch"

  group "zitadel-init" {
    network {
      mode = "bridge"
    }

    service {
      name = "zitadel-init"
      
      connect {
        sidecar_service {
          proxy {
            upstreams {
              destination_name = "cockroach-sql"
              local_bind_port = {{ cockroach.ports.sql }}
            }
          }
        }
      }
    }

    task "zitadel-init" {
      driver = "docker"

      vault {
        policies = ["zitadel"]
      }

      template {
        destination = "${NOMAD_SECRETS_DIR}/database.yaml"
        change_mode = "noop"
        left_delimiter = "[["
        right_delimiter = "]]"
        data = <<EOF
Database:
  cockroach:
    Host: [[ env "NOMAD_UPSTREAM_IP_cockroach-sql" ]]
    Port: [[ env "NOMAD_UPSTREAM_PORT_cockroach-sql" ]]
    Database: zitadel
    MaxOpenConns: 20
    MaxConnLifetime: 30m
    MaxConnIdleTime: 30m
    Options: ""
    Admin:
      Username: zitadel_admin
      Password: "[[ with secret "database/static-creds/zitadel_admin" ]][[ .Data.password ]][[ end ]]"
    User:
      Username: zitadel_user
      Password: "[[ with secret "database/static-creds/zitadel_user" ]][[ .Data.password ]][[ end ]]"
EOF
      }

      config {
        image = "ghcr.io/zitadel/zitadel:{{ zitadel.version }}"

        command = "init"

        args = [
          "--config",
          "${NOMAD_SECRETS_DIR}/database.yaml",
        ]
      }
    }
  }
}